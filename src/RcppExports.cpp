// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// constC1
NumericVector constC1(NumericVector p);
RcppExport SEXP _ktaucenters_constC1(SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(constC1(p));
    return rcpp_result_gen;
END_RCPP
}
// constC2
NumericVector constC2(NumericVector p);
RcppExport SEXP _ktaucenters_constC2(SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(constC2(p));
    return rcpp_result_gen;
END_RCPP
}
// my_median
double my_median(Rcpp::NumericVector x);
RcppExport SEXP _ktaucenters_my_median(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(my_median(x));
    return rcpp_result_gen;
END_RCPP
}
// rhoAux
NumericVector rhoAux(NumericVector x, double cc);
RcppExport SEXP _ktaucenters_rhoAux(SEXP xSEXP, SEXP ccSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type cc(ccSEXP);
    rcpp_result_gen = Rcpp::wrap(rhoAux(x, cc));
    return rcpp_result_gen;
END_RCPP
}
// rhoOpt_pablo
NumericVector rhoOpt_pablo(NumericVector x, double cc);
RcppExport SEXP _ktaucenters_rhoOpt_pablo(SEXP xSEXP, SEXP ccSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type cc(ccSEXP);
    rcpp_result_gen = Rcpp::wrap(rhoOpt_pablo(x, cc));
    return rcpp_result_gen;
END_RCPP
}
// psiAux
NumericVector psiAux(NumericVector x, double cc);
RcppExport SEXP _ktaucenters_psiAux(SEXP xSEXP, SEXP ccSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type cc(ccSEXP);
    rcpp_result_gen = Rcpp::wrap(psiAux(x, cc));
    return rcpp_result_gen;
END_RCPP
}
// psiOpt_pablo
NumericVector psiOpt_pablo(NumericVector x, double cc);
RcppExport SEXP _ktaucenters_psiOpt_pablo(SEXP xSEXP, SEXP ccSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type cc(ccSEXP);
    rcpp_result_gen = Rcpp::wrap(psiOpt_pablo(x, cc));
    return rcpp_result_gen;
END_RCPP
}
// derpsiAux
NumericVector derpsiAux(NumericVector x, double cc);
RcppExport SEXP _ktaucenters_derpsiAux(SEXP xSEXP, SEXP ccSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type cc(ccSEXP);
    rcpp_result_gen = Rcpp::wrap(derpsiAux(x, cc));
    return rcpp_result_gen;
END_RCPP
}
// derpsiOpt_pablo
NumericVector derpsiOpt_pablo(NumericVector x, double cc);
RcppExport SEXP _ktaucenters_derpsiOpt_pablo(SEXP xSEXP, SEXP ccSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type cc(ccSEXP);
    rcpp_result_gen = Rcpp::wrap(derpsiOpt_pablo(x, cc));
    return rcpp_result_gen;
END_RCPP
}
// normal_consistency_constants
NumericVector normal_consistency_constants(int p);
RcppExport SEXP _ktaucenters_normal_consistency_constants(SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(normal_consistency_constants(p));
    return rcpp_result_gen;
END_RCPP
}
// constC1
NumericVector constC1(NumericVector p);
RcppExport SEXP _ktaucenters_constC1(SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(constC1(p));
    return rcpp_result_gen;
END_RCPP
}
// constC2
NumericVector constC2(NumericVector p);
RcppExport SEXP _ktaucenters_constC2(SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(constC2(p));
    return rcpp_result_gen;
END_RCPP
}
// my_median
double my_median(Rcpp::NumericVector x);
RcppExport SEXP _ktaucenters_my_median(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(my_median(x));
    return rcpp_result_gen;
END_RCPP
}
// Mscale_pablo
double Mscale_pablo(NumericVector u, double b, double cc);
RcppExport SEXP _ktaucenters_Mscale_pablo(SEXP uSEXP, SEXP bSEXP, SEXP ccSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type u(uSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type cc(ccSEXP);
    rcpp_result_gen = Rcpp::wrap(Mscale_pablo(u, b, cc));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ktaucenters_constC1", (DL_FUNC) &_ktaucenters_constC1, 1},
    {"_ktaucenters_constC2", (DL_FUNC) &_ktaucenters_constC2, 1},
    {"_ktaucenters_my_median", (DL_FUNC) &_ktaucenters_my_median, 1},
    {"_ktaucenters_rhoAux", (DL_FUNC) &_ktaucenters_rhoAux, 2},
    {"_ktaucenters_rhoOpt_pablo", (DL_FUNC) &_ktaucenters_rhoOpt_pablo, 2},
    {"_ktaucenters_psiAux", (DL_FUNC) &_ktaucenters_psiAux, 2},
    {"_ktaucenters_psiOpt_pablo", (DL_FUNC) &_ktaucenters_psiOpt_pablo, 2},
    {"_ktaucenters_derpsiAux", (DL_FUNC) &_ktaucenters_derpsiAux, 2},
    {"_ktaucenters_derpsiOpt_pablo", (DL_FUNC) &_ktaucenters_derpsiOpt_pablo, 2},
    {"_ktaucenters_normal_consistency_constants", (DL_FUNC) &_ktaucenters_normal_consistency_constants, 1},
    {"_ktaucenters_constC1", (DL_FUNC) &_ktaucenters_constC1, 1},
    {"_ktaucenters_constC2", (DL_FUNC) &_ktaucenters_constC2, 1},
    {"_ktaucenters_my_median", (DL_FUNC) &_ktaucenters_my_median, 1},
    {"_ktaucenters_Mscale_pablo", (DL_FUNC) &_ktaucenters_Mscale_pablo, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_ktaucenters(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
